// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Application {
  Telegram
  whatsapp
  OpenAi
  gmail
  resend
}

model User {
  id                 String            @id @default(cuid())
  email              String            @unique
  passwordHash       String?
  lastLoggedId       DateTime?
  refreshToken       String? // Hashed refresh token
  refreshTokenExpiry DateTime?
  createdAt          DateTime?         @default(now())
  updatedAt          DateTime?         @updatedAt
  workflow           Workflow[]
  userCredentials    UserCredentials[]
}

model Workflow {
  id        String   @id @default(cuid())
  userId    String
  name      String
  isActive  Boolean
  tags      String[]
  nodes     Json[]
  edges     Json[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model UserCredentials {
  id        String   @id @default(cuid())
  name      String
  type      String?
  apiName   String?
  appIcon   String?
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  data      Json

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model AvailabeTriggers {
  id          String   @unique @default(uuid())
  name        String
  type        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
}

